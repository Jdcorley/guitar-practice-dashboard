import { Button } from "std-widgets.slint";

component Pane inherits Rectangle {
    in property <int> pane-id;
    in-out property <int> content-kind;
    in-out property <string> header-title;
    in property <color> panel_bg;
    in property <color> header_bg;
    in property <color> text_color;
    in property <length> corner_radius;
    in property <length> gutter;
    in property <int> selected-key;
    in property <int> selected-scale;
    in property <[FretData]> string-0-data: [];
    in property <[FretData]> string-1-data: [];
    in property <[FretData]> string-2-data: [];
    in property <[FretData]> string-3-data: [];
    in property <[FretData]> string-4-data: [];
    in property <[FretData]> string-5-data: [];
    
    callback add-component(kind: int);
    callback fret-clicked(string: int, fret: int);
    callback note-hovered(string: int, fret: int, note-name: string);
    callback key-selected(key: int);
    callback scale-selected(scale: int);

    border-radius: corner_radius;
    background: panel_bg;
    border-width: 1px; border-color: #3A3D47;

    VerticalLayout {
        spacing: 0px;

        Rectangle {
            height: 34px; background: header_bg;
            border-radius: corner_radius;

            HorizontalLayout {
                padding-left: gutter; padding-right: gutter;
                Text { text: header-title; color: text_color; vertical-alignment: center; }
                HorizontalLayout { }
                Button { text: "✕"; clicked => { root.content-kind = 0; } }
            }
        }

        Rectangle {
            background: panel_bg;

            Metronome { visible: content-kind == 1; }
            ChordSheet { visible: content-kind == 2; }
            VideoPanel { visible: content-kind == 3; }
            // Fretboard re-enabled: With only 1 pane, we only create 1 Fretboard instance
            // This should be safe: 1 Fretboard × 6 strings × 12 frets = 72 components (manageable)
            Fretboard { 
                visible: content-kind == 4;
                selected-key: root.selected-key;
                selected-scale: root.selected-scale;
                string-0-data: root.string-0-data;
                string-1-data: root.string-1-data;
                string-2-data: root.string-2-data;
                string-3-data: root.string-3-data;
                string-4-data: root.string-4-data;
                string-5-data: root.string-5-data;
                fret-clicked(string, fret) => { root.fret-clicked(string, fret); }
                note-hovered(string, fret, note-name) => { root.note-hovered(string, fret, note-name); }
            }
            Keys {
                visible: content-kind == 5;
                selected-key: root.selected-key;
                key-selected(key) => { root.key-selected(key); }
            }
            Scales {
                visible: content-kind == 6;
                selected-scale: root.selected-scale;
                scale-selected(scale) => { root.scale-selected(scale); }
            }
            VerticalLayout {
                visible: content-kind == 0;
                alignment: center;
                spacing: 12px;
                
                Text { 
                    color: #9AA0A6; 
                    text: "Add a component:"; 
                    font-size: 14px;
                }
                
                VerticalLayout {
                    spacing: 8px;
                    
                    Button { 
                        text: "Fretboard"; 
                        clicked => { root.add-component(4); }
                    }
                    Button { 
                        text: "Keys"; 
                        clicked => { root.add-component(5); }
                    }
                    Button { 
                        text: "Scales"; 
                        clicked => { root.add-component(6); }
                    }
                    Button { 
                        text: "Metronome"; 
                        clicked => { root.add-component(1); }
                    }
                    Button { 
                        text: "Chord Sheet"; 
                        clicked => { root.add-component(2); }
                    }
                    Button { 
                        text: "Video Panel"; 
                        clicked => { root.add-component(3); }
                    }
                }
            }
        }
    }
}

export component AppWindow inherits Window {
    preferred-width: 1200px; 
    preferred-height: 800px;
    title: "Guitar Practice";

    in property <color> surface_bg: #1E1F24;
    in property <color> panel_bg: #262830;
    in property <color> header_bg: #2E313A;
    in property <color> text_color: #E6E6E6;
    in property <color> accent: #5CC8FF;
    in property <length> corner_radius: 8px;
    in property <length> gutter: 10px;

    in-out property <string> main_title: "";
    in-out property <int> main_kind: 0;

    in-out property <int> selected-key: 0;
    in-out property <int> selected-scale: 1;
    in-out property <[FretData]> string-0-data: [];
    in-out property <[FretData]> string-1-data: [];
    in-out property <[FretData]> string-2-data: [];
    in-out property <[FretData]> string-3-data: [];
    in-out property <[FretData]> string-4-data: [];
    in-out property <[FretData]> string-5-data: [];

    callback add-component(kind: int);
    callback fret-clicked(string: int, fret: int);
    callback note-hovered(string: int, fret: int, note-name: string);
    callback key-selected(key: int);
    callback scale-selected(scale: int);

    background: surface_bg;

    VerticalLayout {
        spacing: 0px;
        padding: 10px;

        // Single main pane
        Pane { 
            pane-id: 0; 
            content-kind: root.main_kind; 
            header-title: root.main_title;
            panel_bg: root.panel_bg; 
            header_bg: root.header_bg; 
            text_color: root.text_color;
            corner_radius: root.corner_radius; 
            gutter: root.gutter;
            selected-key: root.selected-key;
            selected-scale: root.selected-scale;
            string-0-data: root.string-0-data;
            string-1-data: root.string-1-data;
            string-2-data: root.string-2-data;
            string-3-data: root.string-3-data;
            string-4-data: root.string-4-data;
            string-5-data: root.string-5-data;
            add-component(kind) => { root.add-component(kind); }
            fret-clicked(string, fret) => { root.fret-clicked(string, fret); }
            note-hovered(string, fret, note-name) => { root.note-hovered(string, fret, note-name); }
            key-selected(key) => { root.key-selected(key); }
            scale-selected(scale) => { root.scale-selected(scale); }
        }
    }
}

import { Metronome } from "components/Metronome.slint";
import { ChordSheet } from "components/ChordSheet.slint";
import { VideoPanel } from "components/VideoPanel.slint";
import { Fretboard, FretData } from "components/Fretboard.slint";
import { Keys } from "components/Keys.slint";
import { Scales } from "components/Scales.slint";

// (Pane defined above)


